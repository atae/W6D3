{"version":3,"sources":["webpack/bootstrap 81ad05b6ca9cf9664c17","./frontend/twitter.js","./frontend/follow_toggle.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,IAAG;AACH,EAAC;;;;;;;ACND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,YAAY;AACrC,oBAAmB,YAAY;AAC/B;AACA;AACA,mCAAkC,oBAAoB;AACtD;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 81ad05b6ca9cf9664c17\n **/","const FTSomething = require('./follow_toggle');\n\n$( () => {\n  $('.follow-toggle').each((index, button) => {\n    return new FTSomething(button);\n  });\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/twitter.js\n ** module id = 0\n ** module chunks = 0\n **/","class FollowToggle {\n  constructor($el){\n    this.$el = $($el);\n    this.userId = parseInt(this.$el.attr('data-user-id'));\n    this.followState = this.$el.attr('data-initial-follow-state');\n    this.render();\n    this.handleClick();\n  }\n\n  render(){\n    if(this.followState === \"followed\") {\n      this.$el.text(\"Unfollow!\");\n    } else {\n      this.$el.text(\"Follow!\");\n    }\n  }\n\n  setPendingState() {\n    // fix following / followed stuffs\n  }\n\n  handleClick(){\n    // debugger\n    this.$el.on(\"click\", (e) => {\n      this.setPendingState();\n      e.preventDefault();\n      let oppositeFollowstate = (this.followState === \"followed\" ? \"unfollowed\" : \"followed\");\n      let requestType = (this.followState === \"followed\" ? \"DELETE\" : \"POST\");\n        $.ajax({\n          url: `/users/${this.userId}/follow`,\n          type: `${requestType}`,\n          dataType: \"JSON\",\n          success: function(){\n            this.followState = `${oppositeFollowstate}`;\n            this.render();\n          }.bind(this),\n          error() {\n            alert('Failed!');\n          }\n        });\n    });\n  }\n}\n\nmodule.exports = FollowToggle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./frontend/follow_toggle.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}